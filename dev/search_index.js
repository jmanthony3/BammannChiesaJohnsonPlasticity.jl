var documenterSearchIndex = {"docs":
[{"location":"extensions/#Extensions","page":"Extensions","title":"Extensions","text":"","category":"section"},{"location":"extensions/","page":"Extensions","title":"Extensions","text":"The functionality of the base package can be extended upon loading the loading other packages. Currently, the following extensions can be loaded for additional interaction with the BCJ-plasticity model, and the reader is directed to those pages for the extension of interest. Future work may include an extension for the Ferrite.jl package to perform finite element analyses in pure Julia with the BCJ-plasticity model.","category":"page"},{"location":"extensions/","page":"Extensions","title":"Extensions","text":"Modules = [\n    Base.get_extension(BammannChiesaJohnsonPlasticity, :OptimizationBCJPlasticityExt)]\nPages   = [\n    \"OptimizationBCJPlasticityExt.md\"]\nDepth   = 1","category":"page"},{"location":"ext/OptimizationBCJPlasticityExt.jl/OptimizationBCJPlasticityExt/#OptimizationBCJPlasticityExt","page":"OptimizationBCJPlasticityExt","title":"OptimizationBCJPlasticityExt","text":"","category":"section"},{"location":"ext/OptimizationBCJPlasticityExt.jl/OptimizationBCJPlasticityExt/","page":"OptimizationBCJPlasticityExt","title":"OptimizationBCJPlasticityExt","text":"CurrentModule = Base.get_extension(BammannChiesaJohnsonPlasticity, :OptimizationBCJPlasticityExt)","category":"page"},{"location":"ext/OptimizationBCJPlasticityExt.jl/OptimizationBCJPlasticityExt/","page":"OptimizationBCJPlasticityExt","title":"OptimizationBCJPlasticityExt","text":"This extension is meant to provide additional functionality to the base package with the intent of performing optimization studies with the Optimization.jl and LossFunctions.jl packages to calibrate material model constants against experimental data.","category":"page"},{"location":"ext/OptimizationBCJPlasticityExt.jl/OptimizationBCJPlasticityExt/#Types","page":"OptimizationBCJPlasticityExt","title":"Types","text":"","category":"section"},{"location":"ext/OptimizationBCJPlasticityExt.jl/OptimizationBCJPlasticityExt/","page":"OptimizationBCJPlasticityExt","title":"OptimizationBCJPlasticityExt","text":"Modules = [Base.get_extension(BammannChiesaJohnsonPlasticity, :OptimizationBCJPlasticityExt)]\nOrder   = [:type]\nPages   = [\"OptimizationBCJPlasticityExt.jl\",\n    \"Metals.jl\",\n        \"Bammann1990Modeling.jl]","category":"page"},{"location":"ext/OptimizationBCJPlasticityExt.jl/OptimizationBCJPlasticityExt/#Functions","page":"OptimizationBCJPlasticityExt","title":"Functions","text":"","category":"section"},{"location":"ext/OptimizationBCJPlasticityExt.jl/OptimizationBCJPlasticityExt/","page":"OptimizationBCJPlasticityExt","title":"OptimizationBCJPlasticityExt","text":"Modules = [Base.get_extension(BammannChiesaJohnsonPlasticity, :OptimizationBCJPlasticityExt)]\nOrder   = [:function]\nPages   = [\"OptimizationBCJPlasticityExt.jl\",\n    \"Metals.jl\",\n        \"Bammann1990Modeling.jl]","category":"page"},{"location":"ext/OptimizationBCJPlasticityExt.jl/OptimizationBCJPlasticityExt/#ContinuumMechanicsBase.parameter_bounds-Union{Tuple{T}, Tuple{Bammann1990Modeling, T}} where T<:ContinuumMechanicsBase.AbstractMaterialTest","page":"OptimizationBCJPlasticityExt","title":"ContinuumMechanicsBase.parameter_bounds","text":"Set lower bounds to zero for physical admissibility.\n\n\n\n\n\n","category":"method"},{"location":"ext/OptimizationBCJPlasticityExt.jl/OptimizationBCJPlasticityExt/#Index","page":"OptimizationBCJPlasticityExt","title":"Index","text":"","category":"section"},{"location":"ext/OptimizationBCJPlasticityExt.jl/OptimizationBCJPlasticityExt/","page":"OptimizationBCJPlasticityExt","title":"OptimizationBCJPlasticityExt","text":"Modules = [Base.get_extension(BammannChiesaJohnsonPlasticity, :OptimizationBCJPlasticityExt)]\nOrder   = [:type, :function]\nPages   = [\"OptimizationBCJPlasticityExt.md\"]","category":"page"},{"location":"BammannChiesaJohnsonPlasticity/#Base","page":"Bammann-Chiesa-Johnson Plasticity","title":"Base","text":"","category":"section"},{"location":"BammannChiesaJohnsonPlasticity/","page":"Bammann-Chiesa-Johnson Plasticity","title":"Bammann-Chiesa-Johnson Plasticity","text":"CurrentModule = BammannChiesaJohnsonPlasticity","category":"page"},{"location":"BammannChiesaJohnsonPlasticity/","page":"Bammann-Chiesa-Johnson Plasticity","title":"Bammann-Chiesa-Johnson Plasticity","text":"This package adds overloads and sub-types from the ContinuumMechanicsBase.jl package for the BCJ-plasticity model. Most importantly, the AbstractBCJModel and AbstractBCJTest sub-types are defined first such that subsequent types and functions might dispatch under these two types. Some helper functions are also defined for calculating the mathematical norm from a vector representing the upper triangle of a symmetric tensor and the von Mises equivalent of a symmetric tensor. The elements of this vector for the upper triangle of a symmetric vector are in row-major order. That is, the upper triangle of a symmetric, second-rank tensor may be represented as a vector: e. g. underbarunderbarA vecequiv A_11 A_12 A_13 A_22 A_23 A_33. Currently, the package includes support for the following categories of materials:","category":"page"},{"location":"BammannChiesaJohnsonPlasticity/","page":"Bammann-Chiesa-Johnson Plasticity","title":"Bammann-Chiesa-Johnson Plasticity","text":"Modules = [BammannChiesaJohnsonPlasticity]\nPages   = [\n    \"Metals.md\"]\nDepth   = 1","category":"page"},{"location":"BammannChiesaJohnsonPlasticity/#Types","page":"Bammann-Chiesa-Johnson Plasticity","title":"Types","text":"","category":"section"},{"location":"BammannChiesaJohnsonPlasticity/","page":"Bammann-Chiesa-Johnson Plasticity","title":"Bammann-Chiesa-Johnson Plasticity","text":"Modules = [BammannChiesaJohnsonPlasticity]\nOrder   = [:type]\nPages   = [\"BammannChiesaJohnsonPlasticity.jl\"]","category":"page"},{"location":"BammannChiesaJohnsonPlasticity/#BammannChiesaJohnsonPlasticity.AbstractBCJModel","page":"Bammann-Chiesa-Johnson Plasticity","title":"BammannChiesaJohnsonPlasticity.AbstractBCJModel","text":"Parent type for all BCJ-variant models.\n\n\n\n\n\n","category":"type"},{"location":"BammannChiesaJohnsonPlasticity/#BammannChiesaJohnsonPlasticity.AbstractBCJTest","page":"Bammann-Chiesa-Johnson Plasticity","title":"BammannChiesaJohnsonPlasticity.AbstractBCJTest","text":"Parent type for all BCJ-variant tests.\n\n\n\n\n\n","category":"type"},{"location":"BammannChiesaJohnsonPlasticity/#Functions","page":"Bammann-Chiesa-Johnson Plasticity","title":"Functions","text":"","category":"section"},{"location":"BammannChiesaJohnsonPlasticity/","page":"Bammann-Chiesa-Johnson Plasticity","title":"Bammann-Chiesa-Johnson Plasticity","text":"Modules = [BammannChiesaJohnsonPlasticity]\nOrder   = [:function]\nPages   = [\"BammannChiesaJohnsonPlasticity.jl\"]","category":"page"},{"location":"BammannChiesaJohnsonPlasticity/#BammannChiesaJohnsonPlasticity.norm_symvec-Tuple{Vector{<:Real}}","page":"Bammann-Chiesa-Johnson Plasticity","title":"BammannChiesaJohnsonPlasticity.norm_symvec","text":"Calculate scalar magnitude for flat vector of symmetric tensor: e. g. A̲̲ ≡⃗ [A₁₁, A₁₂, A₁₃, A₂₂, A₂₃, A₃₃]\n\n\n\n\n\n","category":"method"},{"location":"BammannChiesaJohnsonPlasticity/#BammannChiesaJohnsonPlasticity.update-Tuple{AbstractBCJModel, Vararg{Any}}","page":"Bammann-Chiesa-Johnson Plasticity","title":"BammannChiesaJohnsonPlasticity.update","text":"update(ψ, args; kwargs...)\n\n\nGiven viscoplasticity model and the current material state, update to the next material state.\n\n\n\n\n\n","category":"method"},{"location":"BammannChiesaJohnsonPlasticity/#BammannChiesaJohnsonPlasticity.vonMises-Tuple{Any}","page":"Bammann-Chiesa-Johnson Plasticity","title":"BammannChiesaJohnsonPlasticity.vonMises","text":"von Mises (equivalent) scalar for symmetric tensor.\n\n\n\n\n\n","category":"method"},{"location":"BammannChiesaJohnsonPlasticity/#BammannChiesaJohnsonPlasticity.vonMises-Tuple{Union{SubArray{<:Real}, Vector{<:Real}}}","page":"Bammann-Chiesa-Johnson Plasticity","title":"BammannChiesaJohnsonPlasticity.vonMises","text":"von Mises (equivalent) scalar for flat vector of symmetric tensor: e. g. A̲̲ ≡⃗ [A₁₁, A₁₂, A₁₃, A₂₂, A₂₃, A₃₃]\n\n\n\n\n\n","category":"method"},{"location":"BammannChiesaJohnsonPlasticity/#Index","page":"Bammann-Chiesa-Johnson Plasticity","title":"Index","text":"","category":"section"},{"location":"BammannChiesaJohnsonPlasticity/","page":"Bammann-Chiesa-Johnson Plasticity","title":"Bammann-Chiesa-Johnson Plasticity","text":"Modules = [BammannChiesaJohnsonPlasticity]\nOrder   = [:type, :function]\nPages   = [\"BammannChiesaJohnsonPlasticity.md\"]","category":"page"},{"location":"#BammannChiesaJohnsonPlasticity","page":"Home","title":"BammannChiesaJohnsonPlasticity","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for BammannChiesaJohnsonPlasticity.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The BammannChiesaJohnsonPlasticity.jl package is a Julian implementation of Bammann-Chiesa-Johnson (BCJ) plasticity to model the inelastic deformation of solid materials at a given temperature and strain rate with Internal State Variables (ISVs). The BCJ-plasticity model satisfies the Clausius-Duhem inequality by placing thermodynamic constraints on ISVs and their rate equations (Coleman and Gurtin (1967)) which are motivated by equations for dislocation mechanics. The model assumes that for any continuum mechanics configuration each material point at each moment in time satisfies some equilibrium criterion for a triplet point composed of the deformation gradient, temperature, and current set of ISVs. The ISVs in the current configuration intrinsically represent the evolution of the ISVs because of the material history afforded by the rate equations. These ISVs and their rate equations are used to increment the current configuration from the previous configuration by a trial guess that the material deforms elastically and correcting this trial guess for any plastic deformation accrued in the increment: this is the scheme of the Radial-Return Method from Krieg and Krieg (1977).","category":"page"},{"location":"","page":"Home","title":"Home","text":"The goal of this package is to provide an interface for the BCJ-plasticity model and its equations to implement and interact with those equations from publications, as well as, give opportunity for developing or improving the model. The BCJ model has been applied to many materials over the years; however, only those models from a select few papers for modeling the inelastic deformation of metals are currently defined in this package. It is a hope of the authors that published models expanding, refining, or applying the BCJ model onto a wider selection of materials might be included in this package along with the model constants employed in those publications for the appropriate chemical system.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This package employs the ContinuumMechanicsBase.jl package for the types and functions common to continuum mechanics modeling. Currently, the package acts as a point simulator to update the material states and assumes a Poisson's ratio of 0.5. Although the package can be used out-of-the-box to plot the specified BCJ model with the appropriate loading conditions, material properties, and model constants, the package can be extended to calibrate the constants against experimental data via the Optimization.jl package. For an example of interacting with and calibrating BCJ model constants, the reader is referred to the notebooks folder for a set of Pluto.jl notebooks as examples. Furthermore, in that folder contains a notebook for interacting with the Johnson and Cook (1983). This JohnsonCook.jl notebook includes a neighboring script (JohnsonCook-functions.jl) which defines all the necessary types and functions if one wants to create or modify a viscoplasticity model for interaction or calibration as in a Pluto notebook. The empirical Johnson-Cook model is included as an example given that its widespread recognition might minimize the learning curve for encoding a material model into a Julian implementation appropriate for calibration with Optimization.jl or interaction in a Pluto notebook.","category":"page"},{"location":"#References","page":"Home","title":"References","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"B. D. Coleman and M. E. Gurtin. Thermodynamics with Internal State Variables. The Journal of Chemical Physics 47, 597–613 (1967).\n\n\n\nR. D. Krieg and D. B. Krieg. Accuracies of Numerical Solution Methods for the Elastic-Perfectly Plastic Model. Journal of Pressure Vessel Technology 99, 510–515 (1977).\n\n\n\nG. R. Johnson and W. H. Cook. A CONSTITUTIVE MODEL AND DATA FOR METALS SUBJECTED TO LARGE STRAINS, HIGH STRAIN RATES AND HIGH TEMPERATURES. In: Proceedings of the 7th International Symposium on Ballistics (The Hague, Netherlands, 1983); pp. 541–547.\n\n\n\nD. J. Bammann. Modeling Temperature and Strain Rate Dependent Large Deformations of Metals. Applied Mechanics Reviews 43, S312-S319 (1990).\n\n\n\nR. G. Whirley and B. Engelmann. DYNA3D: A Nonlinear, Explicit, Three-Dimensional Finite Element Code for Solid and Structural Mechanics, User Manual. Revision 1 (Lawrence Livermore National Lab.(LLNL), Livermore, CA (United States), 1993).\n\n\n\n","category":"page"},{"location":"Metals/#Metals","page":"Metals","title":"Metals","text":"","category":"section"},{"location":"Metals/","page":"Metals","title":"Metals","text":"CurrentModule = BammannChiesaJohnsonPlasticity","category":"page"},{"location":"Metals/","page":"Metals","title":"Metals","text":"Modules = [BammannChiesaJohnsonPlasticity]\nPages   = [\n    \"Bammann1990Modeling.md\"]\nDepth   = 1","category":"page"},{"location":"Metals/#Types","page":"Metals","title":"Types","text":"","category":"section"},{"location":"Metals/","page":"Metals","title":"Metals","text":"Modules = [BammannChiesaJohnsonPlasticity]\nOrder   = [:type]\nPages   = [\"Metals.jl\"]","category":"page"},{"location":"Metals/#BammannChiesaJohnsonPlasticity.AbstractBCJMetalModel","page":"Metals","title":"BammannChiesaJohnsonPlasticity.AbstractBCJMetalModel","text":"Sub-type of AbstractBCJModel for BCJ-models specific to metals.\n\n\n\n\n\n","category":"type"},{"location":"Metals/#BammannChiesaJohnsonPlasticity.AbstractBCJMetalTest","page":"Metals","title":"BammannChiesaJohnsonPlasticity.AbstractBCJMetalTest","text":"Sub-type of AbstractBCJTest for BCJ-models specific to metals.\n\n\n\n\n\n","category":"type"},{"location":"Metals/#BammannChiesaJohnsonPlasticity.BCJMetalDataEntry","page":"Metals","title":"BammannChiesaJohnsonPlasticity.BCJMetalDataEntry","text":"Store vectors of strain, ϵ, and stress, σ data.\n\n\n\n\n\n","category":"type"},{"location":"Metals/#BammannChiesaJohnsonPlasticity.BCJMetalStrainControl","page":"Metals","title":"BammannChiesaJohnsonPlasticity.BCJMetalStrainControl","text":"Stucture for strain-controlled loadings of metals for temperature, θ; strain rate, ϵ̇; final strain, ϵₙ; number of loading increments, N; loading direction, loaddir ∈ {:tension, :compression, :torsion}.\n\n\n\n\n\n","category":"type"},{"location":"Metals/#Functions","page":"Metals","title":"Functions","text":"","category":"section"},{"location":"Metals/","page":"Metals","title":"Metals","text":"Modules = [BammannChiesaJohnsonPlasticity]\nOrder   = [:function]\nPages   = [\"Metals.jl\"]","category":"page"},{"location":"Metals/#References","page":"Metals","title":"References","text":"","category":"section"},{"location":"Metals/","page":"Metals","title":"Metals","text":"","category":"page"},{"location":"Metals/#Index","page":"Metals","title":"Index","text":"","category":"section"},{"location":"Metals/","page":"Metals","title":"Metals","text":"Modules = [BammannChiesaJohnsonPlasticity]\nOrder   = [:type, :function]\nPages   = [\"Metals.md\"]","category":"page"},{"location":"Bammann1990Modeling/#Bammann1990Modeling","page":"Bammann1990Modeling","title":"Bammann1990Modeling","text":"","category":"section"},{"location":"Bammann1990Modeling/","page":"Bammann1990Modeling","title":"Bammann1990Modeling","text":"CurrentModule = BammannChiesaJohnsonPlasticity","category":"page"},{"location":"Bammann1990Modeling/","page":"Bammann1990Modeling","title":"Bammann1990Modeling","text":"The following equations are those employed in the Bammann (1990) paper that are implemented in the Bammann1990Modeling type, constructor, and that method of the kernel function, update associate with this type. As such, the internal equations use the same nomenclature for plastic strain rate, mathbfD^p equiv dotepsilon^(p); the second-rank, deviatoric tensors for Cauchy stress, mathbfsigma and kinematic hardening, mathbfalpha which is an ISV; the scalar isotropic hardening, kappa, and the constants associated with the dynamic and static recovery temperature equations. Of major importance is that, although not explicitly listed in the publication, the equations for h and H are included in this implementation (c. f. DYNA3D User Manual (1993)).","category":"page"},{"location":"Bammann1990Modeling/","page":"Bammann1990Modeling","title":"Bammann1990Modeling","text":"$","category":"page"},{"location":"Bammann1990Modeling/","page":"Bammann1990Modeling","title":"Bammann1990Modeling","text":"\\begin{align}     % plastic strain rate     \\mathbf{D}^{p} &= f(\\theta)\\sinh\\left[ \\frac{ |\\mathbf{\\xi}| - \\kappa - Y(\\theta) }{ V(\\theta) } \\right]\\frac{\\mathbf{\\xi}'}{|\\mathbf{\\xi}'|}\\text{, let }\\mathbf{\\xi}' = \\mathbf{\\sigma}' - \\mathbf{\\alpha}' \\\n    % kinematic hardening     \\dot{\\mathbf{\\alpha}} &= h\\mu(\\theta)\\mathbf{D}^{p} - [r{d}(\\theta)|\\mathbf{D}^{p}| + r{s}(\\theta)]|\\mathbf{\\alpha}|\\mathbf{\\alpha} \\\n    % isotropic hardening     \\dot{\\kappa} &= H\\mu(\\theta)\\mathbf{D}^{p} - [R{d}(\\theta)|\\mathbf{D}^{p}| + R{s}(\\theta)]\\kappa^{2} \\\n    % flow rule     F &= |\\sigma - \\alpha| - \\kappa - \\beta(|\\mathbf{D}^{p}|, \\theta) \\\n    % initial yield stress beta     \\beta(\\mathbf{D}^{p}, \\theta) &= Y(\\theta) + V(\\theta)\\sinh^{-1}\\left(\\frac{|\\mathbf{D}^{p}|}{f(\\theta)}\\right) \\\n    V(\\theta)       &= C{ 1} \\exp\\left( -\\frac{ C{ 2} }{ \\theta } \\right) \\\n    Y(\\theta)       &= C{ 3} \\exp\\left(  \\frac{ C{ 4} }{ \\theta } \\right) \\\n    f(\\theta)       &= C{ 5} \\exp\\left( -\\frac{ C{ 6} }{ \\theta } \\right) \\\n    r{d}(\\theta)   &= C{ 7} \\exp\\left( -\\frac{ C{ 8} }{ \\theta } \\right) \\\n    r{s}(\\theta)   &= C{ 9} \\exp\\left( -\\frac{ C{10} }{ \\theta } \\right) \\\n    R{d}(\\theta)   &= C{11} \\exp\\left( -\\frac{ C{12} }{ \\theta } \\right) \\\n    R{s}(\\theta)   &= C{13} \\exp\\left( -\\frac{ C{14} }{ \\theta } \\right) \\\n    h(\\theta)       &= C{15} \\exp\\left(  \\frac{ C{16} }{ \\theta } \\right) \\\n    H(\\theta)       &= C{17} \\exp\\left(  \\frac{ C{18} }{ \\theta } \\right) \\\n\\end{align} $","category":"page"},{"location":"Bammann1990Modeling/#Types","page":"Bammann1990Modeling","title":"Types","text":"","category":"section"},{"location":"Bammann1990Modeling/","page":"Bammann1990Modeling","title":"Bammann1990Modeling","text":"Modules = [BammannChiesaJohnsonPlasticity]\nOrder   = [:type]\nPages   = [\"Bammann1990Modeling.jl\"]","category":"page"},{"location":"Bammann1990Modeling/#BammannChiesaJohnsonPlasticity.Bammann1990Modeling","page":"Bammann1990Modeling","title":"BammannChiesaJohnsonPlasticity.Bammann1990Modeling","text":"Structure for viscoplasticity model with loading conditions and material properties. Here, uses the effective strain rate based on applied strain rate and loading direction.\n\n\n\n\n\n","category":"type"},{"location":"Bammann1990Modeling/#BammannChiesaJohnsonPlasticity.Bammann1990Modeling-Tuple{BCJMetalStrainControl, AbstractFloat}","page":"Bammann1990Modeling","title":"BammannChiesaJohnsonPlasticity.Bammann1990Modeling","text":"Bammann1990Modeling(conditions, μ)\n\n\nOuter constructor for loading conditions and material properties which assumes a Poisson's ratio of 0.5. Here, μ is the shear modulus.\n\n\n\n\n\n","category":"method"},{"location":"Bammann1990Modeling/#Functions","page":"Bammann1990Modeling","title":"Functions","text":"","category":"section"},{"location":"Bammann1990Modeling/","page":"Bammann1990Modeling","title":"Bammann1990Modeling","text":"Modules = [BammannChiesaJohnsonPlasticity]\nOrder   = [:function]\nPages   = [\"Bammann1990Modeling.jl\"]","category":"page"},{"location":"Bammann1990Modeling/#BammannChiesaJohnsonPlasticity.update-Tuple{Bammann1990Modeling, Vararg{Any, 6}}","page":"Bammann1990Modeling","title":"BammannChiesaJohnsonPlasticity.update","text":"Using the equations and constants from Bammann (1990), this kernel function maps the current material state and ISVs onto the next configuration. Note: though not explicitly listed in paper, temperature equations h = C₁₅ * exp(C₁₆ * θ) and H = C₁₇ * exp(C₁₈ * θ) are included (c. f. DYNA3D User Manual (1993)).\n\n\n\n\n\n","category":"method"},{"location":"Bammann1990Modeling/#References","page":"Bammann1990Modeling","title":"References","text":"","category":"section"},{"location":"Bammann1990Modeling/","page":"Bammann1990Modeling","title":"Bammann1990Modeling","text":"","category":"page"},{"location":"Bammann1990Modeling/#Index","page":"Bammann1990Modeling","title":"Index","text":"","category":"section"},{"location":"Bammann1990Modeling/","page":"Bammann1990Modeling","title":"Bammann1990Modeling","text":"Modules = [BammannChiesaJohnsonPlasticity]\nOrder   = [:type, :function]\nPages   = [\"Bammann1990Modeling.md\"]","category":"page"}]
}
